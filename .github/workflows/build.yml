name: Build and test images

on:
  push:
  pull_request:
    branches:
      - master
  release:
    types: [published]
  schedule:
    - cron: "0 0 * * *"

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - { image: ansible, version: 2.9 }
          - { image: ansible, version: "2.10" }
          - { image: aws, version: 1 }
          - { image: awslnx-systemd, version: 2 }
          - { image: azure, version: 2 }
          - { image: bitcoind, version: 0.20.0 }
          - { image: chrome, version: 1 }
          - { image: dind, version: 1 }
          - { image: golang, version: 1.15 }
          - { image: ibm, version: "1.10" }
          - { image: java, version: 8 }
          - { image: java, version: 11 }
          - { image: kubectl, version: 1.18 }
          - { image: node, version: 10 }
          - { image: node, version: 12 }
          - { image: node, version: 14 }
          - { image: php, version: 7.2 }
          - { image: php, version: 7.3 }
          - { image: php, version: 7.4 }
          - { image: platformsh, version: "3.50" }
          - { image: pynode, version: 3.7 }
          - { image: pynode, version: 3.8 }
          - { image: python, version: 3.7 }
          - { image: python, version: 3.8 }
          - { image: python, version: 2.7 }
          - { image: python, version: 3.7 }
          - { image: react-native, version: 2 }
          - { image: ruby, version: 2.6 }
          - { image: scoutsuite, version: 5.9 }
          - { image: sonar, version: 3.3 }
          - { image: terraform, version: 0.12.29 }
          - { image: terraform, version: 0.13.0 }
          - { image: terraform, version: 0.13.1 }
          - { image: terraform, version: 0.13.4 }
          - { image: tezosqa, version: 0.1 }

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Set up Pipenv
        run: |
          pip install pip pipenv
          pipenv sync
      - name: Build and tests images
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          pipenv run python image_builder.py build -d --image ${{ matrix.image }} --version ${{ matrix.version }}
